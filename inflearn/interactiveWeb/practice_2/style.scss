* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}

body {
  font-family: "Poppins", sans-serif;
}
.box {
  width: 100px;
  height: 100px;
  background: rgba(27, 143, 197, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
}
.box-container {
  display: flex;

  .box {
    border: 2px solid black;
    transition: all 0.5s ease; // 모션종류, 시간, 타이밍, 딜레이

    &:hover {
      transform: scale(2); //rotate(45deg);
      // transform: skew(180deg);
      // transform: translate(100px, 100px);
      // transform-origin: 100% 100%; // 기준점을 바꿔줌(원래는 중간) x축,y축
    }
  }
}

.box1 {
  animation: sample 2s linear 2 forwards;
  // forwards 끝난자리에서 멈춤
  // infinite 무한
  // alternate 반복
  // reverse 거꾸로
  &:hover {
    animation-play-state: paused;
  }
}
@keyframes sample {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(100px, 0px);
  }
  75% {
    transform: translate(100px, 300px);
  }
  100% {
    transform: translate(800px, 300px);
  }
}

// frame by frame 애니메이션 장면 장면별로 하나씩 그려서 만드는 애니메이션
// 이미지 스프라이트를 써야함
.spaceship {
  margin-left: 100px;
  width: 150px;
  height: 150px;
  background: url(./img/sprite_spaceship.png) no-repeat 0 0 / cover; // auto 150px;
  //  / 다음 백그라운드 크기(/ width height) 계산이 쉬운면만 바로 만들고 반대쪽은 auto
  // 지금은 cover쓰면 된다함
  animation: spaceshipMove 2s steps(17) infinite;
}
@keyframes spaceshipMove {
  to {
    background-position: -2550px 0; // 이미지 0부터
  }
}
// gif 로 하면 투명도를 적용할 수 없다.

// 02/05
// rem 은 html 폰트사이즈 기준, em은 현재 엘리먼트의 폰트사이즈를 기준
// vh vw 뷰포트단위는 창의 크기100은 100%
// 3D 이펙트 느낌 주려면 perpective
// rotateX, rotateY는 3d로 돌아감
.world {
  width: 60vw;
  height: 60vh;
  background: dodgerblue;
  display: flex;
  justify-content: center;
  align-items: center;
  // perspective: 100px; // 시점을 제공

  .card {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 1em;
    width: 100px;
    height: 150px;
    background: tomato;
    border-radius: 0.5em;
    font-size: 1.5rem;
    transition: 1s;
    transform: rotateY(
      0deg
    ); // 이거를 넣어주는게 좋다함 뭐 브라우저가 준비를 한다나???
    &:hover {
      transform: rotateY(180deg);
    }
    // 내부 엘리먼트에 3D를 적용할 때는 상위 엘리먼트에 이 속성을 적용해야함
    transform-style: preserve-3d;
    // transform-origin: left;

    .front,
    .back {
      width: 100%;
      height: 100%;
      border-radius: 0.5em;
      position: absolute;
      display: flex;
      justify-content: center;
      align-items: center;
      backface-visibility: hidden;
    }
    .front {
      background: white;
      z-index: 1;
    }
    .back {
      background: blue;
      transform: rotateY(180deg);
    }

    // transform: rotateY(45deg);
    // transform: perspective(500px) rotateY(45deg); // 이러면 다 똑같이 보이게 만듦
  }
}
